@page "/categories"

@using PhotoSpeech.DataAccess.Handlers.Interfaces
@using PhotoSpeech.DataAccess.Models
@using PhotoSpeech.DataAccess.Enums

@inject NavigationManager NavigationManager
@inject ICategoryHandler _categoryHandler

@if (!languagePicked)
{
    <MudTable Items="@languages" Hover="true" LoadingProgressColor="Color.Info" Style="margin-left: 15%; margin-right: 15%;">
        <HeaderContent>
            <MudTh>Languages</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Language" Style="width: 50%">@context.Value</MudTd>
            <MudTd DataLabel="" Style="width: 50%">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-block" OnClick="() => OnChooseThisLanguageClick(context.Key)">Choose this language</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>  
}
else
{
    <MudTable Items="@categories" Hover="true" LoadingProgressColor="Color.Info" Style="margin-left: 15%; margin-right: 15%;">
        <HeaderContent>
            <MudTh>Category</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Category" Style="width: 50%">@context.Name</MudTd>
            <MudTd DataLabel="" Style="width: 50%">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-block" OnClick="() => OnChooseThisCategoryClick(context.Id)">Choose this category</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>    
}




@code {
    private List<Category> categories = new();
    private Dictionary<int, string> languages = new();

    private bool languagePicked = false;
    private int _language;

    protected override void OnInitialized()
    {
        //categories.Add(new Category
        //    {
        //        Id = 1,
        //        Name = "Animals"
        //    });
        //categories.Add(new Category
        //    {
        //        Id = 2,
        //        Name = "People"
        //    });
        //categories.Add(new Category
        //    {
        //        Id = 3,
        //        Name = "Weather"
        //    });
        //categories.Add(new Category
        //    {
        //        Id = 4,
        //        Name = "Colors"
        //    });

        foreach(var l in Enum.GetValues<Language>())
        {
            languages.Add((int)l, l.ToString());
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            categories = await _categoryHandler.GetAllCategories();
        }
    }

    private void OnChooseThisLanguageClick(int language)
    {
        _language = language;
        languagePicked = true;
    }

    private void OnChooseThisCategoryClick(int id)
    {
        NavigationManager.NavigateTo($"/game/{_language}/{id}");
    }
}
